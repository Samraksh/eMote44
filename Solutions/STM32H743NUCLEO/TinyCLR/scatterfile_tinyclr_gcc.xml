<?xml version="1.0"?>
<ScatterFile xmlns="http://schemas.microsoft.com/netmf/ScatterfileSchema.xsd">

    <!-- STM32H743 with 1M Flash, 256K SRAM and 64K DTCM -->

    <Set Name="Valid" Value="false"/>

    <!-- ################################################################################ -->

    <!-- Memory Region base and size values for physical hardware to help clarify the mapping
         by making Symbolic names available instead of a bunch of numbers. These values are
         fixed in hardware and therefore, don't change.
    -->
    <!-- Internal FLASH Bank1 (1MB) -->
    <Set Name="IFLASH_BaseAddress"      Value="0x08000000"/>
    <Set Name="IFLASH_Size"             Value="0x00100000"/><!-- 1MB -->

    <!-- Internal FLASH Bank2 (1MB) -->
    <Set Name="IFLASH_BANK2_BaseAddress"      Value="0x08100000"/>
    <Set Name="IFLASH_BANK2_Size"             Value="0x00100000"/><!-- 1MB -->
	
    <!-- Internal Data Tighly Coupled Memory (DTCM) -->
    <Set Name="DTCM_BaseAddress"        Value="0x20000000"/>
    <Set Name="DTCM_Size"               Value="0x00020000"/><!-- 64KB -->

    <!-- Domain1 AXI_SRAM (512K) -->
    <Set Name="AXI_SRAM_BaseAddress"        Value="0x24000000"/>
    <Set Name="AXI_SRAM_Size"               Value="0x00080000"/>
	
    <!-- Domain2 SRAM1 (128K) -->
    <Set Name="SRAM1_BaseAddress"        Value="0x30000000"/>
    <Set Name="SRAM1_Size"               Value="0x00020000"/>

    <!-- Domain2 SRAM2 (128K) -->
    <Set Name="SRAM2_BaseAddress"        Value="0x30020000"/>
    <Set Name="SRAM2_Size"               Value="0x00020000"/>
	
    <!-- Domain2 SRAM3 (32K) -->
    <Set Name="SRAM3_BaseAddress"        Value="0x30040000"/>
    <Set Name="SRAM3_Size"               Value="0x00008000"/>
	
	<!-- Domain3 SRAM4 (64K) -->
    <Set Name="SRAM4_BaseAddress"        Value="0x38000000"/>
    <Set Name="SRAM4_Size"               Value="0x00010000"/>
	
	<!-- Domain3 Backup SRAM (4K) -->
    <Set Name="BACKUP_SRAM_BaseAddress"        Value="0x38800000"/>
    <Set Name="BACKUP_SRAM_Size"               Value="0x00001000"/>

	<Set Name="Heap_End"       			Value="0x2001EBFF"/> <!-- 1KB -->
	<Set Name="Custom_Heap_Begin"       Value="0x2001EC00"/> <!-- 1KB -->
	<Set Name="Custom_Heap_End"         Value="0x2001EFFF"/>

    <!-- Solution/Project specific usage settings -->

    <!-- Internal FLASH -->
    <!--
         The flash memory layout must match BlockRange definitions
         in DeviceCode\Blockstorage\STM32H7\STM32H7_BlConfig.cpp
    -->
    <!-- TinyBooter sits at power on Reset vector-->
    <Set Name="BooterCode_BaseAddress"  Value="%IFLASH_BaseAddress%"/>
    <Set Name="BooterCode_Size"         Value="0x00020000"/><!-- 128KB -->

    <!-- Configuration section -->
    <Set Name="Config_BaseAddress"      Value="%BooterCode_BaseAddress% + %BooterCode_Size%"/>
    <Set Name="Config_Size"             Value="0x00020000"/><!-- 128KB -->

    <!-- Native Code section -->
    <Set Name="Code_BaseAddress"        Value="0x08040000"/>
    <Set Name="Code_Size"               Value="0x00080000"/><!-- 384KB -->
	
    <!-- Deployment fills the rest of flash... -->

    <!-- Internal DTCM -->
    <!-- Put Stack in DTCM for high speed access, reducing overhead of stack usage -->
    <Set Name="Stack_Bottom"            Value="0x2001F000"/>
	<Set Name="Stack_Size"              Value="0x1000" />


    <If Name="TARGETLOCATION" Value="FLASH">
        <Set Name="Valid"               Value="true"/>
    </If>

    <!-- ################################################################################ -->

    <If Name="Valid" Value="false">
        <Error Message="Configuration not recognized"/>
    </If>

    <!--<EntryPoint Name="EntryPoint" />-->
	<EntryPoint Name="Reset_Handler" />
	
    <NamedGroup Name="MEMORY">
        <LoadRegion Name="D_CCM" Base="%DTCM_BaseAddress%" Size="%DTCM_Size%" />
        <LoadRegion Name="AXI_SRAM" Base="%AXI_SRAM_BaseAddress%" Size="%AXI_SRAM_Size%" />
		<LoadRegion Name="SRAM1" Base="%SRAM1_BaseAddress%" Size="%SRAM1_Size%" />
		<LoadRegion Name="SRAM2" Base="%SRAM2_BaseAddress%" Size="%SRAM2_Size%" />
		<LoadRegion Name="SRAM3" Base="%SRAM3_BaseAddress%" Size="%SRAM3_Size%" />
		<LoadRegion Name="SRAM4" Base="%SRAM4_BaseAddress%" Size="%SRAM4_Size%" />
		<LoadRegion Name="BACKUP_SRAM" Base="%BACKUP_SRAM_BaseAddress%" Size="%BACKUP_SRAM_Size%" />
		<LoadRegion Name="LR_%TARGETLOCATION%" Base="%Code_BaseAddress%" Size="%Code_Size%" />
        <LoadRegion Name="LR_CONFIG" Base="%Config_BaseAddress%" Size="%Config_Size%"/>
    </NamedGroup>

    <NamedGroup Name="SECTIONS">
        <!-- ========= INTERNAL FLASH ============================================ -->

        <ExecRegion Name="ER_%TARGETLOCATION%" Options="&gt;LR_%TARGETLOCATION%"> 
			<FileMapping Name="KEEP" Options="(*(.isr_vector))" />	
			<FileMapping Name="*" Options="(i.Reset_Handler)" />			
			<FileMapping Name="*" Options="(SectionForFlashOperations)"/>
            <FileMapping Name="*" Options="(.text*)" />
            <FileMapping Name="*" Options="(.rodata*)" />
            <FileMapping Name="*" Options="(rodata)" />
            <FileMapping Name="*" Options="(.constdata*)" />
            <FileMapping Name="*" Options="(.conststring*)" />
            <FileMapping Name="*" Options="(.glue*)" />
			<FileMapping Name="*" Options="(tinyclr_metadata)" />
            <Include File="%SPOCLIENT%\Solutions\STM32H743NUCLEO\scatterfile_gcc_missing_symbols.xml"/>
        </ExecRegion>

        <!-- ========= INTERNAL RAM ============================================= -->
        <!-- Writeable Vector table -->
        <!-- NOTE:
             Despite what you might hope for, this CANNOT go into the CCM area as the NVIC does not
             have access to that space (it sees the AHB layer and below, rather than the core's D-Bus)
        -->
        <!-- Alignment for the vector table is important to allow the NVIC to decode the proper locations
            (See Section 4.4.4 of the ARM Cortex-M4 Generic User Guide [ ARM DUI 0553A (ID121610) ] )
            Since this starts the SRAM block, it's aligned just fine for any size table.
        -->
        <GlobalVariable Name="_sidata" Value="LOADADDR(ER_RAM_RW)"/>

		
        <ExecRegion Name="ER_RAM_RW" Align="0x10" Options="&gt;D_CCM AT&gt;LR_FLASH ">
			<FileMapping Name="_sdata = .;" />
            <FileMapping Name="*" Options="(rwdata)" />
            <FileMapping Name="*" Options="(.data*)" />
			<FileMapping Name="_edata = .;" />
        </ExecRegion>

        <ExecRegion Name="ER_RAM_RO" Align="0x10" Options="&gt;D_CCM">
            <!-- Flash programming from Flash is safe on STM32 -->
            <!-- No need to place Flash programming code in RAM -->
            <!-- <FileMapping Name="*" Options="(SectionForFlashOperations)" /> -->
        </ExecRegion>

		<ExecRegion Name=".dma_buffer" Align="0x10" Base="(NOLOAD)" Options="&gt;SRAM1">
			<FileMapping Name="KEEP" Options="(*(.dma_buffer))" />
        </ExecRegion>
		
        <ExecRegion Name=".bss" Align="0x10" Base="(NOLOAD)" Options="&gt;D_CCM">
			<FileMapping Name="_sbss = .;" />
            <FileMapping Name="*" Options="(.bss*)" />
            <FileMapping Name="PROVIDE(__exidx_start = .);" />
            <FileMapping Name="PROVIDE(__exidx_end = .);" />
            <FileMapping Name="*" Options="(.zidata*)" />
            <FileMapping Name="*" Options="(COMMON)" />
			<FileMapping Name="_ebss = .;" />
        </ExecRegion>

        <ExecRegion Name="/DISCARD/">
            <FileMapping Name="*" Options="(.ARM.exidx*)" />
            <FileMapping Name="*" Options="(.ARM.extab*)" />
        </ExecRegion>

        <ExecRegion Name="ER_HEAP_BEGIN" Align="0x10" Options="&gt;D_CCM">
            <FileMapping Name="*" Options="(SectionForHeapBegin)" />
			<FileMapping Name="HeapBegin = .;" />
        </ExecRegion>

        <ExecRegion Name="ER_HEAP_END" Base="%Heap_End%" Options="&gt;D_CCM" >
            <FileMapping Name="*" Options="(SectionForHeapEnd)" />
			<FileMapping Name="HeapEnd = .;" />
        </ExecRegion>

        <ExecRegion Name="ER_CUSTOM_HEAP_BEGIN" Base="%Custom_Heap_Begin%" Options="&gt;D_CCM" >
            <FileMapping Name="*" Options="(SectionForCustomHeapBegin)" />
			<FileMapping Name="CustomHeapBegin = .;" />
        </ExecRegion>

        <!-- everything between heapbegin and heapend will be allocated for the unmanaged SimpleHeap -->

        <ExecRegion Name="ER_CUSTOM_HEAP_END" Base="%Custom_Heap_End%" Options="&gt;D_CCM" >
            <FileMapping Name="*" Options="(SectionForCustomHeapEnd)" />
			<FileMapping Name="CustomHeapEnd = .;" />
        </ExecRegion>

        <!-- ========= Internal DTCM ============================================ -->
        <ExecRegion Name="ER_STACK_BOTTOM" Base="%Stack_Bottom%" Options="&gt;D_CCM">
            <FileMapping Name="*" Options="(SectionForStackBottom)" />
			<FileMapping Name="StackBottom = .;" />
        </ExecRegion>

        <ExecRegion Name="ER_STACK_TOP" Base="%Stack_Bottom% + %Stack_Size%" Options="&gt;D_CCM">
            <FileMapping Name="*" Options="(SectionForStackTop)" />
			<FileMapping Name="_estack = .;" />
        </ExecRegion>

        <ExecRegion Name="ER_CONFIG" Options="&gt;LR_CONFIG">
            <FileMapping Name="*" Options="(SectionForConfig)" />
        </ExecRegion>
    </NamedGroup>

    <!-- The following variables are used to simulate the ones autogenerated by ARMCC -->
    <GlobalVariable Name="Load$$ER_%TARGETLOCATION%$$Base"          Value="LOADADDR(ER_%TARGETLOCATION%)"/>
    <GlobalVariable Name="Image$$ER_%TARGETLOCATION%$$Length"       Value="SIZEOF(ER_%TARGETLOCATION%)"/>
    <GlobalVariable Name="Image$$ER_RAM_RO$$Base"                   Value="ADDR(ER_RAM_RO)"/>
    <GlobalVariable Name="Image$$ER_RAM_RO$$Length"                 Value="SIZEOF(ER_RAM_RO)"/>
    <GlobalVariable Name="Load$$ER_RAM_RO$$Base"                    Value="LOADADDR(ER_RAM_RO)"/>
    <GlobalVariable Name="Image$$ER_RAM_RW$$Base"                   Value="ADDR(ER_RAM_RW)"/>
    <GlobalVariable Name="Image$$ER_RAM_RW$$Length"                 Value="SIZEOF(ER_RAM_RW)"/>
    <GlobalVariable Name="Load$$ER_RAM_RW$$Base"                    Value="LOADADDR(ER_RAM_RW)"/>
    <GlobalVariable Name="Image$$ER_RAM_RW$$ZI$$Base"               Value="ADDR(.bss)"/>
    <GlobalVariable Name="Image$$ER_RAM_RW$$ZI$$Length"             Value="SIZEOF(.bss)"/>
    <GlobalVariable Name="__use_no_semihosting_swi"                 Value="0"/>
</ScatterFile>

